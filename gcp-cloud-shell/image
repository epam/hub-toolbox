#!/bin/bash -ex

# Copyright 2023 EPAM Systems, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


HUB_EXTENSIONS_REF=master
HUB_STATE_RELEASE_VERSION=latest
HUB_CTL_RELEASE_VERSION=latest
IMAGE_VERSION=latest

while test -n "$1"; do
  case $1 in
    --release )           RELEASE="1"
                          ;;
    --extensions )        HUB_EXTENSIONS_REF="$2"
                          shift
                          ;;
    --release-version )   IMAGE_VERSION="$2"
                          RELEASE="1"
                          shift
                          ;;
    * )                   echo "Error: unknown option $1"
                          exit 1
    ;;
  esac
  shift
done

IMAGE_NAME=ghcr.io/epam/hub-toolbox-gcp-cloud-shell

GITHUB_API_URL="https://api.github.com/repos/epam"
curl=(curl -s -H "Accept: application/vnd.github.v3+json")
if test "$HUB_CTL_RELEASE_VERSION" = "latest"; then
  HUB_CTL_RELEASE_VERSION=$("${curl[@]}" "$GITHUB_API_URL/hubctl/releases/latest" | jq -crM '.tag_name' | cut -c 2-)
fi

if test "$HUB_STATE_RELEASE_VERSION" = "latest"; then
  HUB_STATE_RELEASE_VERSION=$("${curl[@]}" "$GITHUB_API_URL/hub-state/releases/latest" | jq -crM '.tag_name' | cut -c 2-)
fi

GITHUB_URL="https://github.com/epam"
TOOLBOX_VERSION=$(git rev-parse HEAD | cut -c-7)
HUB_CTL_VERSION=$(git ls-remote -q "$GITHUB_URL/hubctl.git" "v$HUB_CTL_RELEASE_VERSION" 2>/dev/null | cut -c-7)
HUB_EXTENSIONS_VERSION=$(git ls-remote -q "$GITHUB_URL/hub-extensions.git" "$HUB_EXTENSIONS_REF" 2>/dev/null | cut -c-7)
HUB_STATE_VERSION=$(git ls-remote -q "$GITHUB_URL/hub-state.git" "v$HUB_STATE_RELEASE_VERSION" 2>/dev/null | cut -c-7)

IMAGE_TAG="$IMAGE_NAME:$TOOLBOX_VERSION-$HUB_CTL_VERSION-$HUB_EXTENSIONS_VERSION-$HUB_STATE_VERSION"

docker buildx build --platform linux/amd64 \
  --build-arg="HUB_CTL_RELEASE_VERSION=$HUB_CTL_RELEASE_VERSION" \
  --build-arg="HUB_EXTENSIONS_VERSION=$HUB_EXTENSIONS_VERSION" \
  --build-arg="HUB_STATE_RELEASE_VERSION=$HUB_STATE_RELEASE_VERSION" \
  --tag "$IMAGE_TAG" .

if docker push "$IMAGE_TAG"; then
  echo "Built & pushed cloud-shell image from:"
  echo "* Hub CLI: v$HUB_CTL_RELEASE_VERSION $HUB_CTL_VERSION"
  echo "* Hub Extensions: $HUB_EXTENSIONS_REF $HUB_EXTENSIONS_VERSION"
  echo "* Hub State: v$HUB_STATE_RELEASE_VERSION $HUB_STATE_VERSION"
  echo "* Toolbox: master $TOOLBOX_VERSION"
  echo "Image tag: $IMAGE_TAG"
else
  echo "^^^ Can't push the image, see the error above ^^^"
  exit 1
fi

if test -n "$RELEASE"; then
  IMAGE_RELEASE_TAG="$IMAGE_NAME:$IMAGE_VERSION"
  echo "Releasing image with tag $IMAGE_RELEASE_TAG"
  docker tag "$IMAGE_TAG" "$IMAGE_RELEASE_TAG"
  docker push "$IMAGE_RELEASE_TAG"
  echo "Image tag: $IMAGE_RELEASE_TAG"
fi
