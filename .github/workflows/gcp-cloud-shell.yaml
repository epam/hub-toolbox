name: 'Build and Push - GCP Cloud Shell image'

on:
  workflow_dispatch:
    inputs:
      hubVersion:
        description: 'Hub CTL release version. Use "latest" or release number (ex. 1.0.0).'
        required: true
        default: 'latest'
      hubStateVersion:
        description: 'Hub State release version. Use "latest" or release number (ex. 1.0.0).'
        required: true
        default: 'latest'
      hubExtRef:
        description: 'Hub Extensions git ref.'
        required: true
        default: 'stable'
      hubExtCommit:
        description: 'Hub Extensions commit hash. If empty Hub Extensions git ref is used.'
        required: false
        default: ''
      customTag:
        description: 'Name of tag.'
        required: false
        default: 'latest'

jobs:
  build:
    runs-on: 'ubuntu-latest'

    steps:
      -
        name: 'Checkout'
        uses: 'actions/checkout@v3'

      -
        id: 'info'
        name: 'Gather info'
        env:
          HUB_CTL_VERSION: ${{ inputs.hubVersion || 'latest' }}
          HUB_STATE_VERSION: ${{ inputs.hubStateVersion || 'latest' }}
          HUB_EXT_REF: ${{ inputs.hubExtRef || 'stable' }}
        run: |
          HUB_CTL_VERSION="${{ env.HUB_CTL_VERSION }}"
          if test "$HUB_CTL_VERSION" = "latest"; then
            HUB_CTL_VERSION=$(curl -s -H "Accept: application/vnd.github.v3+json" "https://api.github.com/repos/epam/hubctl/releases/latest" | jq -crM '.tag_name | select(.)' | cut -c 2-)
            if test -z "$HUB_CTL_VERSION"; then
              echo "Hub CLI version can't be empty"
              exit 1
            fi
          fi

          HUB_STATE_VERSION="${{ env.HUB_STATE_VERSION }}"
          if test "$HUB_STATE_VERSION" = "latest"; then
            HUB_STATE_VERSION=$(curl -s -H "Accept: application/vnd.github.v3+json" "https://api.github.com/repos/epam/hub-state/releases/latest" | jq -crM '.tag_name | select(.)' | cut -c 2-)
            if test -z "$HUB_STATE_VERSION"; then
              echo "Hub State extension version can't be empty"
              exit 1
            fi
          fi

          HUB_CTL_VERSION_COMMIT=$(git ls-remote -q https://github.com/epam/hubctl.git "v$HUB_CTL_VERSION" 2>/dev/null | cut -c-7)
          HUB_EXTENSIONS_VERSION=$(git ls-remote -q https://github.com/epam/hub-extensions.git "${{ env.HUB_EXT_REF }}" 2>/dev/null | cut -c-7)
          HUB_STATE_VERSION_COMMIT=$(git ls-remote -q https://github.com/epam/hub-state.git "v$HUB_STATE_VERSION" 2>/dev/null | cut -c-7)
          IMAGE_VERSION=$(echo "${{ github.sha }}" | cut -c-7)

          echo "imageVersion=$IMAGE_VERSION" >> $GITHUB_OUTPUT
          echo "hubVersion=$HUB_CTL_VERSION" >> $GITHUB_OUTPUT
          echo "hubVersionCommit=$HUB_CTL_VERSION_COMMIT" >> $GITHUB_OUTPUT
          echo "hubExtVersion=$HUB_EXTENSIONS_VERSION" >> $GITHUB_OUTPUT
          echo "hubStateVersion=$HUB_STATE_VERSION" >> $GITHUB_OUTPUT
          echo "hubStateVersionCommit=$HUB_STATE_VERSION_COMMIT" >> $GITHUB_OUTPUT

      -
        id: 'versions'
        name: 'Calculate versions'
        run: |
          echo "hubExtVersion=${{ inputs.hubExtCommit || steps.info.outputs.hubExtVersion }}" >> $GITHUB_OUTPUT

      -
        name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      -
        name: 'Set up Docker Buildx'
        uses: 'docker/setup-buildx-action@v2'
        with:
          platforms: linux/amd64

      -
        name: Image meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/epam/hub-toolbox-gcp-cloud-shell
          tags: |
            type=raw,value=${{ steps.info.outputs.imageVersion }}-${{ steps.info.outputs.hubVersionCommit }}-${{ steps.versions.outputs.hubExtVersion }}-${{ steps.info.outputs.hubStateVersionCommit }}
            type=raw,value=${{ inputs.customTag }},enable=${{ inputs.customTag != '' }}

      -
        name: 'Build and push'
        uses: "docker/build-push-action@v3"
        with:
          context: ./gcp-cloud-shell
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            HUB_CTL_RELEASE_VERSION=${{ steps.info.outputs.hubVersion }}
            HUB_EXTENSIONS_VERSION=${{ steps.versions.outputs.hubExtVersion }}
            HUB_STATE_RELEASE_VERSION=${{ steps.info.outputs.hubStateVersion }}
